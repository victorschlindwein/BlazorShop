@page "/categories/delete/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer
@attribute [Authorize]

@if (Model is null)
{
    <p class="text-center">
        <em>Category not found</em>
    </p>
}
else
{
    <h1>@Model.Title (@Model.Id)</h1>
    <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nome da categoria</label>
            <InputText @bind-Value="Model.Title" class="form-control" readonly />
            <ValidationMessage For="@(() => Model.Title)" />
        </div>

        <button type="submit" class="btn btn-danger">
            Excluir
        </button>

        <a href="/categories">Cancel</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    public Category? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await Context
            .Categories
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.Id == Id);
        }
        catch { }
    }

    public async Task OnValidSubmit()
    {
        try
        {
            Context.Categories.Remove(Model);
            await Context.SaveChangesAsync();
            Navigation.NavigateTo("categories");
        }
        catch { }
    }
}
